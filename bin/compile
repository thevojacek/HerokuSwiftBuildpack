#!/usr/bin/env bash
# bin/compile <build-dir> <cache-dir>

# Sets, how should script behave in case of a failure
set -e
set -o pipefail

# Directories
BUILD_DIR=$1
CACHE_DIR=$2
ENV_DIR=$3

# Language versions specification
SWIFT_VERSION="4.2.1"
C_LANG_VERSION="7.0.0"

# Downloads URLs
SWIFT_URL="https://swift.org/builds/swift-$SWIFT_VERSION-release/ubuntu1804/swift-$SWIFT_VERSION-RELEASE/swift-$SWIFT_VERSION-RELEASE-ubuntu18.04.tar.gz"
C_LANG_URL="http://llvm.org/releases/$C_LANG_VERSION/clang+llvm-$C_LANG_VERSION-x86_64-linux-gnu-ubuntu-16.04.tar.xz"

# Install Clang
echo "-----> Installing Clang $C_LANG_VERSION"

if ! [ -d "$CACHE_DIR/swift-lib/clang/bin" ]; then
    cd $CACHE_DIR
    wget --quiet $C_LANG_URL
    mkdir -p swift-lib/clang
    tar -C swift-lib/clang -xvf clang+llvm-$C_LANG_VERSION-x86_64-linux-gnu-ubuntu-16.04.tar.xz
    mv swift-lib/clang/clang+llvm-$C_LANG_VERSION-x86_64-linux-gnu-ubuntu-16.04/* swift-lib/clang
    rmdir swift-lib/clang/clang+llvm-$C_LANG_VERSION-x86_64-linux-gnu-ubuntu-16.04
    rm -f clang+llvm-$C_LANG_VERSION-x86_64-linux-gnu-ubuntu-16.04.tar.xz
fi

export PATH=$CACHE_DIR/swift-lib/clang/bin:"${PATH}"
echo "-----> Clang installed"

# export PATH

# Install Swift
echo "-----> Installing Swift $SWIFT_VERSION"

if ! [ -d "$BUILD_DIR/.swift-lib/swift/usr/bin" ]; then
    cd $BUILD_DIR
    wget --quiet $SWIFT_URL
    mkdir -p .swift-lib/swift
    tar -C .swift-lib/swift -xvf swift-$SWIFT_VERSION-RELEASE-ubuntu18.04.tar.gz
    mv .swift-lib/swift/swift-$SWIFT_VERSION-RELEASE-ubuntu18.04/* .swift-lib/swift
    rmdir .swift-lib/swift/swift-$SWIFT_VERSION-RELEASE-ubuntu18.04
    rm -f swift-$SWIFT_VERSION-RELEASE-ubuntu18.04.tar.gz
fi

# TODO: copy *.so files to build directory after build as well!!!!!!!!!!!!!!!! from build folder
cd $BUILD_DIR
mkdir -p ..swift-lib
cp $BUILD_DIR/.swift-lib/swift/usr/lib/swift/linux/*.so $BUILD_DIR/.swift-lib

export PATH=$BUILD_DIR/.swift-lib/swift/usr/bin:"${PATH}"
export LD_LIBRARY_PATH=$HOME/.swift-lib
echo "-----> Swift installed"

# Build application
echo "-----> Building application"
cd $BUILD_DIR
swift build -c release --build-path $BUILD_DIR/build -Xlinker -L"$HOME/.swift-lib"
find "$BUILD_DIR/build/release" -name '*.so' -type f -exec cp {} $BUILD_DIR/.swift-lib \;
mv $BUILD_DIR/build/release/* $BUILD_DIR
rm -rf $BUILD_DIR/build

# TODO: delete unncessary files (no binaries and folders)

echo $LD_LIBRARY_PATH

echo "-----> Application built successfully"

