#!/usr/bin/env bash
# bin/compile <build-dir> <cache-dir>

# Sets, how should script behave in case of a failure
set -e
set -o pipefail

# Directories
BUILD_DIR=$1
CACHE_DIR=$2
ENV_DIR=$3

# Language versions specification
SWIFT_VERSION="4.2.1"
C_LANG_VERSION="3.7.1"

# Downloads URLs
SWIFT_URL="https://swift.org/builds/swift-$SWIFT_VERSION-release/ubuntu1404/swift-$SWIFT_VERSION-RELEASE/swift-$SWIFT_VERSION-RELEASE-ubuntu14.04.tar.gz"
C_LANG_URL="http://llvm.org/releases/$C_LANG_VERSION/clang+llvm-$C_LANG_VERSION-x86_64-linux-gnu-ubuntu-14.04.tar.xz"

# Creates a caching directory
mkdir -p "$CACHE_DIR"

# Install Clang
echo "-----> Installing Clang $C_LANG_VERSION"
cd $BUILD_DIR
curl $C_LANG_URL -O
mkdir -p vendor/clang
tar -C vendor/clang -xvf clang+llvm-$C_LANG_VERSION-x86_64-linux-gnu-ubuntu-14.04.tar.xz
mv vendor/clang/clang+llvm-$C_LANG_VERSION-x86_64-linux-gnu-ubuntu-14.04/* vendor/clang
rmdir vendor/clang/clang+llvm-$C_LANG_VERSION-x86_64-linux-gnu-ubuntu-14.04
rm -f clang+llvm-$C_LANG_VERSION-x86_64-linux-gnu-ubuntu-14.04.tar.xz

export PATH=$BUILD_DIR/vendor/clang/bin:"${PATH}"
echo "-----> Clang installed"

# export PATH

# Install Swift
echo "-----> Installing Swift $SWIFT_VERSION"
cd $BUILD_DIR
curl $SWIFT_URL -O
mkdir -p vendor/swift
tar -C vendor/swift -xvf swift-$SWIFT_VERSION-RELEASE-ubuntu14.04.tar.gz
mv vendor/swift/swift-$SWIFT_VERSION-RELEASE-ubuntu14.04/* vendor/swift
rmdir vendor/swift/swift-$SWIFT_VERSION-RELEASE-ubuntu14.04
rm -f swift-$SWIFT_VERSION-RELEASE-ubuntu14.04.tar.gz

export PATH=$BUILD_DIR/vendor/swift/usr/bin:"${PATH}"
echo "-----> Swift installed"

# Build application
echo "-----> Building application"
cd $BUILD_DIR
swift build -c release --build-path $BUILD_DIR/build
mv $BUILD_DIR/build/release/* $BUILD_DIR
rmdir $BUILD_DIR/build/release/
echo "-----> Application built successfully"

